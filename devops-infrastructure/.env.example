# ===========================================
# DevOps Infrastructure Environment Variables
# ===========================================

# ===========================================
# Kubernetes Configuration
# ===========================================
KUBECONFIG=/path/to/your/kubeconfig
K8S_NAMESPACE_MICROSERVICES=microservices
K8S_NAMESPACE_MONITORING=monitoring
K8S_NAMESPACE_LOGGING=logging
K8S_NAMESPACE_ARGOCD=argocd

# ===========================================
# Docker Registry Configuration
# ===========================================
DOCKER_REGISTRY_URL=registry.gitlab.com/your-group/microservices-platform
DOCKER_REGISTRY_USERNAME=your_gitlab_username
DOCKER_REGISTRY_PASSWORD=your_gitlab_access_token

# Alternative registries
# DOCKER_REGISTRY_URL=docker.io/your-username
# DOCKER_REGISTRY_URL=ghcr.io/your-username

# ===========================================
# ArgoCD Configuration
# ===========================================
ARGOCD_SERVER_URL=argocd-server.argocd.svc.cluster.local:443
ARGOCD_USERNAME=admin
ARGOCD_PASSWORD=your_argocd_admin_password
ARGOCD_PROJECT_NAME=microservices
ARGOCD_REPO_URL=https://github.com/your-username/microservices-platform
ARGOCD_REPO_BRANCH=main

# ===========================================
# GitLab CI/CD Configuration
# ===========================================
GITLAB_URL=https://gitlab.com
GITLAB_TOKEN=your_gitlab_personal_access_token
GITLAB_PROJECT_ID=your_project_id
GITLAB_RUNNER_TOKEN=your_runner_registration_token

# ===========================================
# Monitoring Configuration
# ===========================================
# Prometheus
PROMETHEUS_RETENTION_TIME=15d
PROMETHEUS_STORAGE_SIZE=50Gi
PROMETHEUS_MEMORY_REQUEST=2Gi
PROMETHEUS_MEMORY_LIMIT=4Gi
PROMETHEUS_CPU_REQUEST=1000m
PROMETHEUS_CPU_LIMIT=2000m

# Grafana
GRAFANA_ADMIN_USERNAME=admin
GRAFANA_ADMIN_PASSWORD=your_grafana_admin_password
GRAFANA_STORAGE_SIZE=10Gi
GRAFANA_MEMORY_REQUEST=1Gi
GRAFANA_MEMORY_LIMIT=2Gi

# ===========================================
# Logging Configuration (ELK Stack)
# ===========================================
# Elasticsearch
ELASTICSEARCH_CLUSTER_NAME=microservices-logs
ELASTICSEARCH_MEMORY_REQUEST=2Gi
ELASTICSEARCH_MEMORY_LIMIT=4Gi
ELASTICSEARCH_STORAGE_SIZE=100Gi
ELASTICSEARCH_REPLICAS=3

# Kibana
KIBANA_MEMORY_REQUEST=1Gi
KIBANA_MEMORY_LIMIT=2Gi

# Logstash
LOGSTASH_MEMORY_REQUEST=1Gi
LOGSTASH_MEMORY_LIMIT=2Gi

# ===========================================
# Security Configuration
# ===========================================
# TLS/SSL
TLS_CERT_PATH=/etc/ssl/certs/microservices.crt
TLS_KEY_PATH=/etc/ssl/private/microservices.key
CA_CERT_PATH=/etc/ssl/certs/ca.crt

# Secrets
POSTGRES_PASSWORD=your_postgres_password
REDIS_PASSWORD=your_redis_password
ADMIN_PASSWORD=your_admin_password
JWT_SECRET_KEY=your_jwt_secret_key_minimum_256_bits

# ===========================================
# Storage Configuration
# ===========================================
STORAGE_CLASS=fast-ssd
BACKUP_STORAGE_CLASS=standard
STORAGE_PROVISIONER=kubernetes.io/aws-ebs
# Alternative: kubernetes.io/gce-pd, kubernetes.io/azure-disk

# ===========================================
# Networking Configuration
# ===========================================
INGRESS_CLASS=nginx
INGRESS_HOST=microservices.local
LOAD_BALANCER_IP=your_load_balancer_ip
SSL_REDIRECT=true

# ===========================================
# Backup Configuration
# ===========================================
BACKUP_ENABLED=true
BACKUP_SCHEDULE=0 2 * * *
BACKUP_RETENTION_DAYS=30
BACKUP_STORAGE_LOCATION=s3://your-backup-bucket/microservices
AWS_ACCESS_KEY_ID=your_aws_access_key
AWS_SECRET_ACCESS_KEY=your_aws_secret_key
AWS_REGION=us-east-1

# ===========================================
# Performance Testing Configuration
# ===========================================
K6_BASE_URL=http://microservices.local
K6_VIRTUAL_USERS=50
K6_DURATION=5m
K6_THRESHOLDS_HTTP_REQ_DURATION=p(95)<500
K6_THRESHOLDS_HTTP_REQ_FAILED=rate<0.02

# ===========================================
# External Dependencies
# ===========================================
# Database
POSTGRES_HOST=postgres.microservices.svc.cluster.local
POSTGRES_PORT=5432
POSTGRES_DB=microservices

# Cache
REDIS_HOST=redis.microservices.svc.cluster.local
REDIS_PORT=6379

# Message Queue
KAFKA_BROKERS=kafka.microservices.svc.cluster.local:9092

# ===========================================
# Development Configuration
# ===========================================
DEBUG_MODE=false
VERBOSE_LOGGING=false
ENABLE_PROFILING=false
MOCK_EXTERNAL_SERVICES=false

# ===========================================
# CI/CD Pipeline Configuration
# ===========================================
RUN_TESTS=true
RUN_SECURITY_SCAN=true
RUN_PERFORMANCE_TESTS=false
DEPLOY_TO_STAGING=true
AUTO_DEPLOY_TO_PRODUCTION=false
NOTIFICATION_WEBHOOK=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK