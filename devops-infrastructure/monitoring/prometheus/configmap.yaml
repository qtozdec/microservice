apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s

    rule_files:
      - "/etc/prometheus/rules/*.yml"

    alerting:
      alertmanagers:
      - static_configs:
        - targets:
          - alertmanager:9093

    scrape_configs:
    # Prometheus itself
    - job_name: 'prometheus'
      static_configs:
      - targets: ['localhost:9090']
    
    # Kubernetes API server
    - job_name: 'kubernetes-apiservers'
      kubernetes_sd_configs:
      - role: endpoints
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: default;kubernetes;https

    # Kubernetes nodes
    - job_name: 'kubernetes-nodes'
      kubernetes_sd_configs:
      - role: node
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)

    # Kubernetes pods
    - job_name: 'kubernetes-pods'
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: kubernetes_pod_name

    # Microservices applications
    - job_name: 'microservices'
      static_configs:
      - targets:
        - 'user-service.microservices.svc.cluster.local:8081'
        - 'order-service.microservices.svc.cluster.local:8082'
        - 'notification-service.microservices.svc.cluster.local:8083'
        - 'inventory-service.microservices.svc.cluster.local:8084'
        - 'audit-service.microservices.svc.cluster.local:8085'
      metrics_path: '/actuator/prometheus'
      scrape_interval: 15s
      scrape_timeout: 10s

    # Infrastructure services  
    - job_name: 'postgres-exporter'
      static_configs:
      - targets: ['postgres.devops.svc.cluster.local:9187']
      metrics_path: '/metrics'
      scrape_interval: 30s

    - job_name: 'redis-exporter'
      static_configs:
      - targets: ['redis.devops.svc.cluster.local:9121']
      metrics_path: '/metrics'
      scrape_interval: 30s

    # Spring Boot Actuator endpoints
    - job_name: 'microservices-health'
      static_configs:
      - targets:
        - 'user-service.microservices.svc.cluster.local:8081'
        - 'order-service.microservices.svc.cluster.local:8082'
        - 'notification-service.microservices.svc.cluster.local:8083'
        - 'inventory-service.microservices.svc.cluster.local:8084'
        - 'audit-service.microservices.svc.cluster.local:8085'
      metrics_path: '/actuator/health'
      scrape_interval: 30s

    # JVM metrics from Spring Boot
    - job_name: 'microservices-jvm'
      static_configs:
      - targets:
        - 'user-service.microservices.svc.cluster.local:8081'
        - 'order-service.microservices.svc.cluster.local:8082'
        - 'notification-service.microservices.svc.cluster.local:8083'
        - 'inventory-service.microservices.svc.cluster.local:8084'
        - 'audit-service.microservices.svc.cluster.local:8085'
      metrics_path: '/actuator/metrics'
      scrape_interval: 30s