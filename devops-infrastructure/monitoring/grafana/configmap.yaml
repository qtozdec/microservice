apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-config
  namespace: monitoring
data:
  grafana.ini: |
    [analytics]
    check_for_updates = true
    [grafana_net]
    url = https://grafana.net
    [log]
    mode = console
    [paths]
    data = /var/lib/grafana/
    logs = /var/log/grafana
    plugins = /var/lib/grafana/plugins
    provisioning = /etc/grafana/provisioning
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: monitoring
data:
  datasources.yaml: |
    apiVersion: 1
    datasources:
    - name: Prometheus
      type: prometheus
      url: http://prometheus:9090
      access: proxy
      isDefault: true
      basicAuth: false
      editable: true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards-config
  namespace: monitoring
data:
  dashboards.yaml: |
    apiVersion: 1
    providers:
    - name: 'default'
      orgId: 1
      folder: ''
      type: file
      disableDeletion: false
      updateIntervalSeconds: 10
      allowUiUpdates: true
      options:
        path: /var/lib/grafana/dashboards
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards
  namespace: monitoring
data:
  microservices-overview.json: |
    {
        "id": null,
        "title": "Microservices Platform - Overview",
        "tags": ["microservices", "spring-boot", "monitoring"],
        "style": "dark",
        "timezone": "browser",
        "panels": [
          {
            "id": 1,
            "title": "Service Health Status",
            "type": "stat",
            "targets": [
              {
                "expr": "up{job=\"microservices\"}",
                "legendFormat": "{{instance}}"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {
                  "mode": "thresholds"
                },
                "thresholds": {
                  "steps": [
                    {"color": "red", "value": 0},
                    {"color": "green", "value": 1}
                  ]
                },
                "mappings": [
                  {"options": {"0": {"text": "DOWN"}}, "type": "value"},
                  {"options": {"1": {"text": "UP"}}, "type": "value"}
                ]
              }
            },
            "gridPos": {"h": 6, "w": 24, "x": 0, "y": 0}
          },
          {
            "id": 2,
            "title": "HTTP Request Rate",
            "type": "timeseries",
            "targets": [
              {
                "expr": "sum by (application) (rate(http_server_requests_seconds_count{job=\"microservices\"}[5m]))",
                "legendFormat": "{{application}}"
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 6},
            "fieldConfig": {
              "defaults": {
                "unit": "reqps"
              }
            }
          },
          {
            "id": 3,
            "title": "Response Time P95",
            "type": "timeseries", 
            "targets": [
              {
                "expr": "histogram_quantile(0.95, sum by (application, le) (rate(http_server_requests_seconds_bucket{job=\"microservices\"}[5m])))",
                "legendFormat": "{{application}}"
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 12, "y": 6},
            "fieldConfig": {
              "defaults": {
                "unit": "s"
              }
            }
          },
          {
            "id": 4,
            "title": "JVM Memory Usage",
            "type": "timeseries",
            "targets": [
              {
                "expr": "sum by (application) (jvm_memory_used_bytes{job=\"microservices\",area=\"heap\"}) / sum by (application) (jvm_memory_max_bytes{job=\"microservices\",area=\"heap\"}) * 100",
                "legendFormat": "{{application}}"
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 14},
            "fieldConfig": {
              "defaults": {
                "unit": "percent",
                "max": 100
              }
            }
          }
        ],
        "time": {"from": "now-1h", "to": "now"},
        "refresh": "15s"
    }
