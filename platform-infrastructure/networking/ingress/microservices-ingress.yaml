apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: microservices-ingress
  namespace: microservices
  labels:
    app: microservices-platform
    component: ingress
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS, HEAD, PATCH"
    nginx.ingress.kubernetes.io/cors-allow-headers: "*"
    nginx.ingress.kubernetes.io/cors-expose-headers: "Authorization, Content-Type, X-Requested-With, Accept, Origin, Access-Control-Request-Method, Access-Control-Request-Headers"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/cors-max-age: "3600"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    # Rate Limiting - DDoS Protection
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/rate-limit-connections: "10"
    # Stricter limits for auth endpoints
    nginx.ingress.kubernetes.io/rate-limit-rps: "10"
    # WebSocket support
    nginx.ingress.kubernetes.io/websocket-services: "notification-service"
spec:
  ingressClassName: nginx
  rules:
  - host: microservices.local
    http:
      paths:
      # API routes must come before root path
      # User Service API
      - path: /users
        pathType: Prefix
        backend:
          service:
            name: user-service
            port:
              number: 8081
      
      # Authentication endpoints (also handled by user-service)
      - path: /auth
        pathType: Prefix
        backend:
          service:
            name: user-service
            port:
              number: 8081
      
      # Order Service API
      - path: /orders
        pathType: Prefix
        backend:
          service:
            name: order-service
            port:
              number: 8082
      
      # Notification Service API
      - path: /notifications
        pathType: Prefix
        backend:
          service:
            name: notification-service
            port:
              number: 8083
      
      # WebSocket endpoint for real-time notifications
      - path: /ws
        pathType: Prefix
        backend:
          service:
            name: notification-service
            port:
              number: 8083
      
      # Actuator health endpoints for monitoring
      - path: /actuator
        pathType: Prefix
        backend:
          service:
            name: user-service
            port:
              number: 8081
      
      # Frontend - Root path (must be last)
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend
            port:
              number: 80